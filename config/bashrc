#!/usr/local/bin/bash
echo "loading config/bashrc"
ZSH=${ZSH:-$HOME/.oh-my-zsh}
ZSH_CUSTOM=${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}
PS1='[\u@\h \W]\$ '
ICLOUD="${DOT_ICLOUD_DIR:-$HOME/Library/Mobile Documents/com~apple~CloudDocs}}"
ICLOUD_DOCUMENTS="${ICLOUD}/Documents"
ICLOUD_DOWNLOADS="${ICLOUD}/Downloads"
ICLOUD_SCREENSHOTS="${ICLOUD}/ScreenShots"

export ICLOUD ICLOUD_DOCUMENTS ICLOUD_DOWNLOADS ICLOUD_SCREENSHOTS
DOT_PROJECT_DEBUG=${DOT_PROJECT_DEBUG:-false}
DOT_PROJECT_SPLASH_ENTRANCE=${DOT_PROJECT_SPLASH_ENTRANCE:-true}
DOT_PROJECT_SPLASH_TYPE="${DOT_PROJECT_SPLASH_TYPE:-quote}"
DOT_PROJECT_DIR="${DOT_PROJECT_DIR:-$HOME/.dot}"
ZLIB_HELPERS_DIR="${ZLIB_HELPERS_DIR:-$DOT_PROJECT_DIR/zlib}"
SHELL_INIT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd ) # where are we? https://stackoverflow.com/a/246128/1235074
export DOT_PROJECT_DIR ZLIB_HELPERS_DIR SHELL_INIT_DIR
export DOT_PROJECT_DEBUG DOT_PROJECT_SPLASH_ENTRANCE DOT_PROJECT_SPLASH_TYPE
export ICLOUD ICLOUD_DOCUMENTS ICLOUD_DOWNLOADS ICLOUD_SCREENSHOTS
export ZSH ZSH_CUSTOM PS1

# TODO: host secrets in icloud directory (optionally)
if [[ -d "$ICLOUD"/dot && -f "$ICLOUD"/dot/secrets.json ]]; then
    # uses an associative array to load secrets into memory
    declare -A secrets
    # secretKeys=(
    #     $(
    #         jq -r '. | keys | .[]' "$ICLOUD"/dot/secrets.json | xargs
    #     )
    # )

    # use map file to set secret keys
    mapfile -t secretKeys < <(jq -r '. | keys | .[]' "$ICLOUD"/dot/secrets.json | xargs)
    export DOT_SECRET_KEYS=("${secretKeys[@]}")
    echo "length of keys ${#secretKeys[@]}"

    #echo "${secretKeys[@]}"
    # if secrets length is greater than 0, write to /tmp/.secrets
    if [[ ${#secretKeys[@]} -gt 0  ]]; then
        # echo $TMPDIR
        touch "${TMPDIR}"/.secrets
        echo "#!/bin/bash" > "$TMPDIR"/.secrets
    fi
    for secretKey in "${secretKeys[@]}"; do
        secrets[$secretKey]="$(jq --arg secretKey "${secretKey}" -r '.[$secretKey]' "$ICLOUD"/dot/secrets.json)"
        echo "${secretKey}=${secrets[$secretKey]}" >> "$TMPDIR"/.secrets
    done

    if [[ -f "$TMPDIR"/.secrets ]]; then
        source "$TMPDIR"/.secrets
        rm -f "$TMPDIR"/.secrets
    else
        echo "no secrets file found"
    fi
fi