#!/usr/local/bin/bash
# 🕵️ ignore shellcheck warnings about source statements
# shellcheck source=/dev/null

shopt -s histappend # append to history, don't overwrite it
shopt -s histreedit # allow re-editing of failed history substitution
shopt -s histverify # don't execute immediately upon history substitution
shopt -s checkwinsize # update the values of LINES and COLUMNS after each command if altered
shopt -s autocd # if a command is entered that is not a path, assume it is a path and cd to it

HISTFILE=$HOME/.bash_history
export TERM=xterm-256color
export MANPATH="/usr/local/man:$MANPATH"
export HISTSIZE=100000
export SAVEHIST=$HISTSIZE
export MANPATH="/usr/local/man:$MANPATH"
GPG_TTY=$(tty)
export GPG_TTY
export LANG=en_US.UTF-8
export EDITOR=vim
export PAGER='bat '
export MANPAGER="sh -c 'col -bx | bat -l man -p'"
export TMUX_PLUGIN_MANAGER_PATH="$HOME/.tmux/plugins"
arch="$(arch)"
export ARCH="${arch}"

ZSH=${ZSH:-$HOME/.oh-my-zsh}
ZSH_CUSTOM=${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}
PS1='[\u@\h \W]\$ '
ICLOUD="${DOT_ICLOUD_DIR:-$HOME/Library/Mobile Documents/com~apple~CloudDocs}"
ICLOUD_DOCUMENTS="${ICLOUD}/Documents"
ICLOUD_DOWNLOADS="${ICLOUD}/Downloads"
ICLOUD_SCREENSHOTS="${ICLOUD}/ScreenShots"
PROMPT_COMMAND='history -a'
DOT_SHELL='bash'
export DOT_SHELL
DOT_PROJECT_DEBUG=${DOT_PROJECT_DEBUG:-false}
DOT_PROJECT_SPLASH_ENTRANCE=${DOT_PROJECT_SPLASH_ENTRANCE:-true}
DOT_PROJECT_SPLASH_TYPE="${DOT_PROJECT_SPLASH_TYPE:-quote}"
DOT_PROJECT_DIR="${DOT_PROJECT_DIR:-$HOME/.dot}"
DOT_ZLIB_DIR="${DOT_ZLIB_DIR:-$DOT_PROJECT_DIR/zlib}"
SHELL_INIT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd ) # where are we? https://stackoverflow.com/a/246128/1235074

# TODO: ensure secrets are available in bash as well
if [[ -d "$ICLOUD"/dot && -f "$ICLOUD"/dot/secrets.json ]]; then
    # uses an associative array to load secrets into memory
    declare -A secrets
    read -r -a secret_keys <<< "$(jq -r '. | keys | .[]' "$ICLOUD"/dot/secrets.json | xargs)"
    export DOT_SECRET_KEYS=("${secret_keys[@]}")

    touch "${TMPDIR}"/.secrets
    if [[ ${#secret_keys[@]} -gt 0  ]]; then
        echo "#!/bin/bash" > "$TMPDIR"/.secrets
    fi
    for secret_key in "${secret_keys[@]}"; do
        secrets[$secret_key]="$(jq --arg secret_key "${secret_key}" -r '.[$secret_key]' "$ICLOUD"/dot/secrets.json)"
        echo "${secret_key}=${secrets[$secret_key]}" >> "$TMPDIR"/.secrets
    done

    if [[ -f "$TMPDIR"/.secrets ]]; then
        source "$TMPDIR"/.secrets
        rm -f "$TMPDIR"/.secrets
    else
        echo "no secrets file found"
    fi
fi

# TODO: ensure library is available in bash as well
if [[ -d "$DOT_ZLIB_DIR" ]]; then
    for lib in "${DOT_ZLIB_DIR}"/* ; do
        if [[ ! "${DOT_PROJECT_DEBUG}x" == "x" && "${DOT_PROJECT_DEBUG}" == true ]]; then
            echo "loading: $lib"
        fi
        source "$lib" || true
    done
else
    echo "Warning: DOT_ZLIB_DIR not found: $DOT_ZLIB_DIR"
fi

export ICLOUD ICLOUD_DOCUMENTS ICLOUD_DOWNLOADS ICLOUD_SCREENSHOTS
export PROMPT_COMMAND DOT_PROJECT_DIR DOT_ZLIB_DIR SHELL_INIT_DIR DOT_PROJECT_DEBUG DOT_PROJECT_SPLASH_ENTRANCE DOT_PROJECT_SPLASH_TYPE
export ZSH ZSH_CUSTOM PS1